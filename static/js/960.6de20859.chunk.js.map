{"version":3,"file":"static/js/960.6de20859.chunk.js","mappings":"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","sources":["components/fetchApi/FetchApi.js","components/moviesitems/MoviesItems.jsx","components/search/Search.jsx","components/movies/Movies.jsx","webpack://react-homework-template/./src/components/home/StyledParagraph.module.css?54fb"],"sourcesContent":["import axios from \"axios\";\n\n// const BASE_URL = \"https://api.themoviedb.org/3/search/company?\"\nconst BASE_URL = \"https://api.themoviedb.org/3/trending/all/day?\"\nconst API_KEY = \"bb1efa572a94180b7e4fac8a660bbc90\"\n\nexport async function fetchApi () {\n    const data = await axios.get(`${BASE_URL}api_key=${API_KEY}`)\n\n    return data;\n}\n\nconst BASE_URL_SEARCH_QUERY = \"https://api.themoviedb.org/3/search/movie?\"\n\nexport async function fetchOnSearch (query) {\n    const data = await axios.get(`${BASE_URL_SEARCH_QUERY}api_key=${API_KEY}&query=${query}`)\n\n    return data;\n} \n\nconst BASE_URL_MOVIESID = \"https://api.themoviedb.org/3/movie/\"\n\nexport async function fetchOnMoviesId (moviesId) {\n    const data = await axios.get(`${BASE_URL_MOVIESID}${moviesId}?api_key=${API_KEY}`)\n\n    return data;\n}\n\n\nexport async function fetchOnCast (moviesId) {\n    const data = await axios.get(`${BASE_URL_MOVIESID}${moviesId}/credits?api_key=${API_KEY}`)\n\n    return data;\n}\n\nexport async function fetchOnReviews (moviesId) {\n    const data = await axios.get(`${BASE_URL_MOVIESID}${moviesId}/reviews?api_key=${API_KEY}`)\n\n    return data;\n}\n","import { Link, useLocation } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport Paragraph_css from '../home/StyledParagraph.module.css';\n\nconst {Paragraph} = Paragraph_css;\n\nconst Ul = styled.ul`\ndisplay: flex;\nflex-wrap: wrap; \njustify-content: space-evenly; \nalign-items: center; \npadding-right: ${p=>p.theme.space[4]}px; \npadding-left: ${p=>p.theme.space[4]}px;  \n`\n\nconst ListItem = styled.li`\nbox-shadow: 5px 20px 20px 5px ${p=>p.theme.colors.text};\nwidth: 100%;\ndisplay: flex;\njustify-content: space-evenly;\nalign-items: center;\nflex-direction: column;\nmargin-top: ${p=>p.theme.space[6]}px;\n\n@media screen and (min-width: 320px) {\n    width: 100%;\n    height: 300px;\n    max-width: 300px;\n}\n@media screen and (min-width: 480px) {\n    width: 100%;\n    height: 500px;\n    max-width: 480px;\n}\n@media screen and (min-width: 720px) {\n    width: 40%;\n    height: 500px;\n}\n@media screen and (min-width: 1200px) {\n    width: 28%;\n    height: 500px;\n}\n\n`\n\nconst Image = styled.img`\nwidth: 100%;\nmax-width: 200px;\nheight: 150px;\n\n@media screen and (min-width: 320px) {\n    max-width: 300px;\n    height: 200px;\n}\n@media screen and (min-width: 480px) {\n    max-width: 480px;\n    height: 420px;\n}\n@media screen and (min-width: 720px) {\n    max-width: 400px;\n    height: 400px;\n}\n@media screen and (min-width: 1200px) {\n    max-width: 500px;\n    height: 400px;\n}\n`\n\nexport const MoviesItems = ({dataArray}) => {\n    const locate = useLocation()\n\n    return (\n        <Ul>\n        {dataArray.data && dataArray.data.results.map(({id, title, name, poster_path})=>{\n            let pathToImg = 'https://image.tmdb.org/t/p/w500' + poster_path;\n            return (\n                <ListItem key={id}>\n                    <Link to={`/movies/${id}`} className={Paragraph} state={{from: locate}}>{title || name}</Link>\n                    <Image src={pathToImg} alt={title || name} />\n                </ListItem>\n            )\n        })}\n    </Ul>\n    ) \n}","import { Box } from \"components/box/Box\"\nimport { useState } from \"react\"\nimport { useSearchParams } from \"react-router-dom\"\nimport styled from \"styled-components\"\n\nconst Form = styled.form`\nwidth: 100%;\ndisplay: flex; \njustify-content: center; \nalign-items: center;\n\nmargin-top: ${p=>p.theme.space[3]}px;\nmargin-bottom: ${p=>p.theme.space[3]}px;\n\n@media screen and (min-width: 320px) {\n    margin-top: ${p=>p.theme.space[4]}px;\n    margin-bottom: ${p=>p.theme.space[4]}px;\n}\n@media screen and (min-width: 720px) {\n    margin-top: ${p=>p.theme.space[5]}px;\n    margin-bottom: ${p=>p.theme.space[5]}px;\n}\n@media screen and (min-width: 1200px) {\n    margin-top: ${p=>p.theme.space[6]}px;\n    margin-bottom: ${p=>p.theme.space[6]}px;\n}\n`\n\nconst Input = styled.input`\ndisplay: block;\nwidth: 25%;\nheight: 15px;\n\ntext-align: center;\noutline: none;\n\nborder: ${p=>p.theme.borders.normal};\nborder-top-left-radius: ${p=>p.theme.radii.normal};\nborder-bottom-left-radius: ${p=>p.theme.radii.normal};\n\nbox-shadow: 3px 1px 3px 5px ${p=>p.theme.colors.text};\n\nfont-family: ${p=>p.theme.fonts.heading};\nfont-size: ${p=>p.theme.fontSizes[3]}px;\n\npadding: ${p=>p.theme.space[4]}px;\n\n@media screen and (min-width: 320px) {\n    height: 25px;\n    font-size: ${p=>p.theme.fontSizes[4]}px;\n}\n@media screen and (min-width: 720px) {\n    height: 45px;\n    font-size: ${p=>p.theme.fontSizes[5]}px;\n}\n@media screen and (min-width: 1200px) {\n    height: 60px;\n    font-size: ${p=>p.theme.fontSizes[6]}px;\n}\n`\n\nconst Button = styled.button`\nheight: 50px;\ndisplay: block;\ntext-align: center;  \n\nborder: ${p=>p.theme.borders.normal};\nborder-bottom-right-radius: ${p=>p.theme.radii.normal};\nborder-top-right-radius: ${p=>p.theme.radii.normal};\n\nbox-shadow: -3px 1px 3px 5px ${p=>p.theme.colors.text};\n\nfont-size: ${p=>p.theme.fontSizes[3]}px;\n\npadding: 6px;\n\nmargin-left: ${p=>p.theme.space[4]}px;\n\nfont-family: 'Georgia, serif';\n\nbackground-color: #aaa;\ncolor: #fff;\n\ntransition: \nbackground-color 250ms linear,\ncolor 250ms linear,\nborder-color 250ms linear;\n\n&:hover, &:focus {\n    color: #212121;\n    border-color: #fff;\n    background-color: #ccc;\n}\n\n@media screen and (min-width: 320px) {\n    height: 60px;\n    font-size: ${p=>p.theme.fontSizes[4]}px;\n}\n@media screen and (min-width: 720px) {\n    height: 80px;\n    font-size: ${p=>p.theme.fontSizes[5]}px;\n}\n@media screen and (min-width: 1200px) {\n    height: 95px;\n    font-size: ${p=>p.theme.fontSizes[6]}px;\n}\n`\n\nexport const Search = ({ makeFetch }) => {\n    const [searchValue, setSearchValue] = useState(\"\")\n    const [, setSearchParams] = useSearchParams('')\n\n    const handleOnChange = (event) => {\n        let value = event.target.value;\n        // console.log(value)\n\n        setSearchValue(value.trim());\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        if (!searchValue) {\n            return;\n        }\n\n        makeFetch(searchValue);\n        setSearchParams({query: searchValue})\n\n        setSearchValue(\"\");\n    }\n\n    return (\n            <Form onSubmit={handleSubmit}>\n                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexGrow=\"1\">\n                    <Input onChange={handleOnChange} name=\"textSearch\" value={searchValue} type=\"text\" placeholder=\"Input...\"/>\n                    <Button type=\"submit\">Search</Button>\n                </Box>\n            </Form>\n    )\n}","import { Box } from \"components/box/Box\"\nimport { fetchOnSearch } from \"components/fetchApi/FetchApi\"\nimport { MoviesItems } from \"components/moviesitems/MoviesItems\"\nimport { Search } from \"components/search/Search\"\nimport { useEffect, useState } from \"react\"\nimport { useSearchParams } from \"react-router-dom\"\n\n\nconst Movies = () => {\n    const [data, setData] = useState([])\n    const [searchParams] = useSearchParams();\n\n    const fetchData = (searchValue) => {\n        fetchOnSearch(searchValue).then((data)=>{setData(data)})\n    }\n\n    useEffect(()=>{\n        let search = searchParams.get(\"query\")\n        // console.log(search)\n\n        if (!search) {\n            return\n        }\n\n        fetchOnSearch(search).then((data)=>{setData(data)})\n    }, [searchParams])\n\n    return (\n        <Box width=\"100%\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\n            <Search makeFetch={fetchData}></Search>\n            <MoviesItems dataArray={data}></MoviesItems>\n        </Box>\n\n    )\n }\n\n export default Movies;","// extracted by mini-css-extract-plugin\nexport default {\"Paragraph\":\"StyledParagraph_Paragraph__2fNqy\"};"],"names":["BASE_URL","API_KEY","fetchApi","axios","data","BASE_URL_SEARCH_QUERY","fetchOnSearch","query","BASE_URL_MOVIESID","fetchOnMoviesId","moviesId","fetchOnCast","fetchOnReviews","Paragraph","Paragraph_css","Ul","styled","p","theme","space","ListItem","colors","text","Image","MoviesItems","dataArray","locate","useLocation","results","map","id","title","name","pathToImg","poster_path","to","className","state","from","src","alt","Form","Input","borders","normal","radii","fonts","heading","fontSizes","Button","Search","makeFetch","useState","searchValue","setSearchValue","useSearchParams","setSearchParams","onSubmit","event","preventDefault","Box","display","justifyContent","alignItems","flexGrow","onChange","value","target","trim","type","placeholder","setData","searchParams","useEffect","search","get","then","width","flexDirection"],"sourceRoot":""}