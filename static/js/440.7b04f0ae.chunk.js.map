{"version":3,"file":"static/js/440.7b04f0ae.chunk.js","mappings":"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","sources":["components/fetchApi/FetchApi.js","components/home/Home.jsx","webpack://react-homework-template/./src/components/home/StyledParagraph.module.css?54fb"],"sourcesContent":["import axios from \"axios\";\n\n// const BASE_URL = \"https://api.themoviedb.org/3/search/company?\"\nconst BASE_URL = \"https://api.themoviedb.org/3/trending/all/day?\"\nconst API_KEY = \"bb1efa572a94180b7e4fac8a660bbc90\"\n\nexport async function fetchApi () {\n    const data = await axios.get(`${BASE_URL}api_key=${API_KEY}`)\n\n    return data;\n}\n\nconst BASE_URL_SEARCH_QUERY = \"https://api.themoviedb.org/3/search/movie?\"\n\nexport async function fetchOnSearch (query) {\n    const data = await axios.get(`${BASE_URL_SEARCH_QUERY}api_key=${API_KEY}&query=${query}`)\n\n    return data;\n} \n\nconst BASE_URL_MOVIESID = \"https://api.themoviedb.org/3/movie/\"\n\nexport async function fetchOnMoviesId (moviesId) {\n    const data = await axios.get(`${BASE_URL_MOVIESID}${moviesId}?api_key=${API_KEY}`)\n\n    return data;\n}\n\n\nexport async function fetchOnCast (moviesId) {\n    const data = await axios.get(`${BASE_URL_MOVIESID}${moviesId}/credits?api_key=${API_KEY}`)\n\n    return data;\n}\n\nexport async function fetchOnReviews (moviesId) {\n    const data = await axios.get(`${BASE_URL_MOVIESID}${moviesId}/reviews?api_key=${API_KEY}`)\n\n    return data;\n}\n","import { Box } from \"components/box/Box\"\nimport { fetchApi } from \"components/fetchApi/FetchApi\"\nimport { useEffect } from \"react\";\nimport { useState } from \"react\"\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Paragraph_css from '../home/StyledParagraph.module.css';\n// import LoaderWrapper from \"components/loader/Loader\";\n\nconst {Paragraph} = Paragraph_css;\n\nconst Title = styled.h1`\nwidth: 35%;\ndisplay: block;\ntext-align: center;\nmargin: 0 auto;\nbox-shadow: 1px 2px 1px 3px ${p=>p.theme.colors.text};\n\nfont-family: ${p=>p.theme.fonts.heading};\nfont-size: ${p=>p.theme.fontSizes[3]}px;\n\nborder-radius: ${p=>p.theme.radii.normal};\n\npadding: ${p=>p.theme.space[3]}px;\n\nmargin-top: ${p=>p.theme.space[3]}px;\nmargin-bottom: ${p=>p.theme.space[3]}px;\n\n@media screen and (min-width: 320px) {\n    font-size: ${p=>p.theme.fontSizes[4]}px;\n    margin-top: ${p=>p.theme.space[4]}px;\n    margin-bottom: ${p=>p.theme.space[4]}px;\n}\n@media screen and (min-width: 720px) {\n    font-size: ${p=>p.theme.fontSizes[5]}px;\n    margin-top: ${p=>p.theme.space[5]}px;\n    margin-bottom: ${p=>p.theme.space[5]}px;\n}\n@media screen and (min-width: 1200px) {\n    font-size: ${p=>p.theme.fontSizes[6]}px;\n    margin-top: ${p=>p.theme.space[6]}px;\n    margin-bottom: ${p=>p.theme.space[6]}px;\n}\n`\n\nconst ListItem = styled.li`\n/* border-radius: ${p=>p.theme.radii.normal}; */\nbox-shadow: 5px 20px 20px 5px ${p=>p.theme.colors.text};\nwidth: 200px;\nheight: 150px;\ndisplay: flex;\njustify-content: space-evenly;\nalign-items: center;\nflex-direction: column;\n/* background-color: ${p=>p.theme.colors.backgroundSecondary}; */\nmargin-bottom: ${p=>p.theme.space[6]}px;\n\n@media screen and (min-width: 320px) {\n    width: 450px;\n    height: 350px;\n}\n@media screen and (min-width: 720px) {\n    width: 300px;\n    height: 250px;\n}\n@media screen and (min-width: 1200px) {\n    width: 350px;\n    height: 350px;\n}\n@media screen and (min-width: 1400px) {\n    width: 450px;\n    height: 400px;\n}\n`\n\nconst Image = styled.img`\nwidth: 100%;\nmax-width: 200px;\n\n@media screen and (min-width: 320px) {\n    width: 100%;\n    max-width: 450px;\n}\n@media screen and (min-width: 720px) {\n    width: 90%;\n    max-width: 500px;\n}\n@media screen and (min-width: 1200px) {\n    width: 90%;\n    max-width: 600px;\n}\n`\n\nconst Home = () => {\n    const [filmsArray, setFilmsArray] = useState([]);\n    const locate = useLocation()\n    // const [activeLoader, setActiveLoader] = useState(true);\n    \n    useEffect(()=>{\n        // setActiveLoader(false);\n        fetchApi().then(({data})=>{setFilmsArray(data.results)});\n    }, [])\n    \n    // console.log(activeLoader)\n    // console.log(locate)\n    // console.log(filmsArray)\n    return (\n        <Box width=\"100%\" display=\"flex\" flexDirection=\"column\" >\n            {/* {activeLoader && <div>{LoaderWrapper()}</div>} */}\n            <Box><Title>Popular movies</Title></Box>\n            <Box as={\"ul\"} display=\"flex\" flexWrap=\"wrap\" justifyContent=\"space-evenly\" align-items= \"center\" pr={4} pl={4}>\n                {filmsArray.map(({id, title, name, backdrop_path})=>{\n                    let pathToImg = 'https://image.tmdb.org/t/p/w500' + backdrop_path;\n                    return (\n                        <ListItem key={id}>\n                            <Link to={`/movies/${id}`} className={Paragraph} state={{from: locate}}>{title || name}</Link>\n                            <Image src={pathToImg} alt={title || name} />\n                        </ListItem>\n                    )\n                })}\n            </Box>\n        </Box>\n    )\n}\n\nexport default Home;","// extracted by mini-css-extract-plugin\nexport default {\"Paragraph\":\"StyledParagraph_Paragraph__2fNqy\"};"],"names":["BASE_URL","API_KEY","fetchApi","axios","data","BASE_URL_SEARCH_QUERY","fetchOnSearch","query","BASE_URL_MOVIESID","fetchOnMoviesId","moviesId","fetchOnCast","fetchOnReviews","Paragraph","Paragraph_css","Title","styled","p","theme","colors","text","fonts","heading","fontSizes","radii","normal","space","ListItem","backgroundSecondary","Image","useState","filmsArray","setFilmsArray","locate","useLocation","useEffect","then","results","width","display","flexDirection","as","flexWrap","justifyContent","pr","pl","map","id","title","name","pathToImg","backdrop_path","to","className","state","from","src","alt"],"sourceRoot":""}