{"version":3,"file":"static/js/720.5f7d0919.chunk.js","mappings":"+NACA,EAAuB,yBAAvB,EAA8D,gC,iDCMvDA,EAAqBC,EAAfC,EAAeD,EAEtBE,EAAgBC,EAAAA,GAAAA,GAAH,+UACF,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,MAAMC,IAAhB,IACD,SAAAH,GAAC,OAAEA,EAAEC,MAAMG,YAAYD,IAAtB,IAKC,SAAAH,GAAC,OAAEA,EAAEC,MAAMI,MAAM,EAAhB,IAedC,EAAOP,EAAAA,GAAAA,EAAH,4DAKJQ,GAAMR,EAAAA,EAAAA,IAAOO,EAAPP,CAAH,kEACQ,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,MAAMM,OAAhB,IACD,SAAAR,GAAC,OAAEA,EAAEC,MAAMG,YAAYI,OAAtB,IAGZC,GAAOV,EAAAA,EAAAA,IAAOO,EAAPP,CAAH,+CAIJW,GAAeX,EAAAA,EAAAA,IAAOO,EAAPP,CAAH,6DAkClB,EA9Ba,WAET,IAAMY,GAASC,EAAAA,EAAAA,MACf,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,GAAYR,EAAOS,SAASC,MAAK,SAACC,GAAQP,EAAaO,EAAM,IAAEC,OAAM,SAACP,GAASC,EAASD,EAAO,GAClG,GAAE,CAACL,KAIA,UAACa,EAAA,EAAD,CAAKC,GAAI,KAAMC,UAAW/B,EAAMgC,GAAI,EAApC,UACCb,GAAaA,EAAUQ,KAAKM,KAAKC,KAAI,WAA2CC,GAAM,IAA/CC,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,aAE9D,OACA,UAACpC,EAAD,CAAwB4B,UAAW7B,EAAnC,WAAgD,gBAAKsC,IAAK,kCAAoCD,EAAcE,IAAKJ,KAC7G,UAACzB,EAAD,mBAAWwB,MACX,UAACtB,EAAD,oBAAauB,MACb,UAACtB,EAAD,6BAA8BuB,OAHdH,EAKvB,IACAd,IAAS,SAACQ,EAAA,EAAD,CAAKa,QAAQ,OAAOC,eAAe,SAASC,WAAW,SAASC,GAAI,EAApE,UACN,wBAAKxB,EAAMyB,cAItB,C,kMC1EKC,EAAW,iDACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACgBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAAgCC,IADhD,cACGrB,EADH,yBAGIA,GAHJ,kEAMP,IAAMwB,EAAwB,6CAEvB,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACgBH,EAAAA,EAAAA,IAAA,UAAaC,EAAb,mBAA6CH,EAA7C,kBAA8DK,IAD9E,cACG1B,EADH,yBAGIA,GAHJ,kEAMP,IAAM2B,EAAoB,sCAEnB,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACgBN,EAAAA,EAAAA,IAAA,UAAaI,GAAb,OAAiCE,EAAjC,oBAAqDR,IADrE,cACGrB,EADH,yBAGIA,GAHJ,kEAOA,SAAeH,EAAtB,+CAAO,OAAP,oBAAO,WAA4BgC,GAA5B,uFACgBN,EAAAA,EAAAA,IAAA,UAAaI,GAAb,OAAiCE,EAAjC,4BAA6DR,IAD7E,cACGrB,EADH,yBAGIA,GAHJ,kEAMA,SAAe8B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACgBN,EAAAA,EAAAA,IAAA,UAAaI,GAAb,OAAiCE,EAAjC,4BAA6DR,IAD7E,cACGrB,EADH,yBAGIA,GAHJ,kE","sources":["webpack://react-homework-template/./src/components/cast/StyledCast.module.css?4b07","components/cast/Cast.jsx","components/fetchApi/FetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"StyledCast_cast__nvFix\",\"cast__actor\":\"StyledCast_cast__actor__YpxRv\"};","import { Box } from \"components/box/Box\"\nimport StyledCast_css from \"../cast/StyledCast.module.css\"\nimport { fetchOnCast } from \"components/fetchApi/FetchApi\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst {cast, cast__actor} = StyledCast_css;\n\nconst StyledDetails = styled.li`\n  font-family: ${p=>p.theme.fonts.body};\n  font-weight: ${p=>p.theme.fontWeights.body};\n  font-size: 18px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: ${p=>p.theme.space[5]}px;\n\n  p {\n    margin: 10px 0;\n  }\n\n  @media (max-width: 767px) {\n    font-size: 16px;\n  }\n\n  @media (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n\nconst Item = styled.p`\n  padding: 5px;\n  margin: 20px 0;\n`;\n\nconst Job = styled(Item)`\n  font-family: ${p=>p.theme.fonts.heading};\n  font-weight: ${p=>p.theme.fontWeights.heading};\n`;\n\nconst Name = styled(Item)`\n  font-style: italic;\n`;\n\nconst OriginalName = styled(Item)`\n  /* text-decoration: underline; */\n`;\n\nconst Cast = () => {\n    // const locate = useLocation()\n    const params = useParams()\n    const [castArray, setCatsArray] = useState(null)\n    const [error, setError] = useState(null)\n\n    useEffect(()=>{\n        // console.log(Number(params.movieId))\n        fetchOnCast(params.movieId).then((data)=>{setCatsArray(data)}).catch((error)=>{setError(error)})\n    }, [params])\n\n    // console.log(castArray.data)\n    return (\n        <Box as={\"ul\"} className={cast} pt={5}>\n        {castArray && castArray.data.crew.map(({job, name, original_name, profile_path}, id)=>{     \n        // console.log(castArray)\n            return(\n            <StyledDetails key={id} className={cast__actor}><img src={'https://image.tmdb.org/t/p/w500' + profile_path} alt={name}></img>\n                <Job>Job: {job}</Job>\n                <Name>Name: {name}</Name>\n                <OriginalName>Original name: {original_name}</OriginalName>\n            </StyledDetails>)\n        })}\n        {error && <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5}> \n            <h3>{error.message}</h3> \n        </Box>} \n    </Box>\n    )\n}\n\nexport default Cast;","import axios from \"axios\";\n\n// const BASE_URL = \"https://api.themoviedb.org/3/search/company?\"\nconst BASE_URL = \"https://api.themoviedb.org/3/trending/all/day?\"\nconst API_KEY = \"bb1efa572a94180b7e4fac8a660bbc90\"\n\nexport async function fetchApi () {\n    const data = await axios.get(`${BASE_URL}api_key=${API_KEY}`)\n\n    return data;\n}\n\nconst BASE_URL_SEARCH_QUERY = \"https://api.themoviedb.org/3/search/movie?\"\n\nexport async function fetchOnSearch (query) {\n    const data = await axios.get(`${BASE_URL_SEARCH_QUERY}api_key=${API_KEY}&query=${query}`)\n\n    return data;\n} \n\nconst BASE_URL_MOVIESID = \"https://api.themoviedb.org/3/movie/\"\n\nexport async function fetchOnMoviesId (moviesId) {\n    const data = await axios.get(`${BASE_URL_MOVIESID}${moviesId}?api_key=${API_KEY}`)\n\n    return data;\n}\n\n\nexport async function fetchOnCast (moviesId) {\n    const data = await axios.get(`${BASE_URL_MOVIESID}${moviesId}/credits?api_key=${API_KEY}`)\n\n    return data;\n}\n\nexport async function fetchOnReviews (moviesId) {\n    const data = await axios.get(`${BASE_URL_MOVIESID}${moviesId}/reviews?api_key=${API_KEY}`)\n\n    return data;\n}\n"],"names":["cast","StyledCast_css","cast__actor","StyledDetails","styled","p","theme","fonts","body","fontWeights","space","Item","Job","heading","Name","OriginalName","params","useParams","useState","castArray","setCatsArray","error","setError","useEffect","fetchOnCast","movieId","then","data","catch","Box","as","className","pt","crew","map","id","job","name","original_name","profile_path","src","alt","display","justifyContent","alignItems","mt","message","BASE_URL","API_KEY","fetchApi","axios","BASE_URL_SEARCH_QUERY","fetchOnSearch","query","BASE_URL_MOVIESID","fetchOnMoviesId","moviesId","fetchOnReviews"],"sourceRoot":""}